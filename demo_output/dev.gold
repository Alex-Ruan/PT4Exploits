57	encrypt :
12	add var1 , var0
140	mov var1 , var0
125	mov [ var0 ] , al
114	loop decode
71	var0 : inc var1 \n jmp short var2
52	decrypt :
279	xor var0 , var0
44	dec var0
216	pop var0 \n mov var1 , [ var0 ]
16	call var0
15	call var0
47	var0 :
111	lea var1 , [ var0 ]
119	loop decode \n jmp short shellcode
258	sub esp , 4
13	add var0 , 1
287	xor var0 , var0
101	jmp short main
297	xor var0 , var0 \n mov cl , 2
214	pop var0
112	lea var0 , [ esi+1 ]
229	shellcode : db var0
142	mov var0 , 1
3	var0 :
81	inc var0 \n inc var0
295	xor var0 , var0 \n mov cl , [ esi+1 ]
174	mov dl , var0
281	xor var0 , var0 \n mov al , 2
79	inc var0
110	lea var1 , [ var0 ]
172	mov var1 , var0
298	xor var0 , var0 \n mov cl , 5
292	xor var0 , bh
194	mov var0 , esp
49	decode :
183	mov var0 , esp
176	mov dl , var0
135	mov ax , table [ esi * 4 ]
22	var0 :
235	shl var0 , 2
63	var0 : \n inc var1 \n inc var1
193	mov var0 , 78
40	dec var0 \n jz var1
150	mov var1 , byte var0
185	mov var1 , var0
98	jmp short var0
35	var0 : \n not byte [ var1 ]
23	var0 :
116	loop decode \n jmp var2
197	mul var1
74	four :
252	sub cl , 1 \n jnz decode
20	var0 :
218	popad
59	execute :
221	retry :
25	cmp al , cl \n jne short decode \n jmp shellcode
97	jmp short var0
299	xor var1 , var1 \n mul var1
255	sub dl , al \n jns var0
162	mov byte [ var1 ] , var0
213	pop var0
93	inc esi \n jmp short var0
41	dec cl \n jns var0
94	var0 :
90	inc esi
53	div var1
171	mov cl , var0
68	var0 : \n pop var1
179	mov dl , byte [ var0 ]
277	xor cl , 0XAA \n jz var0
165	mov cl , 0102
18	call var0
155	mov byte [ var1 ] , var0
243	shr var0 , 28
43	dec dl \n jz var0
136	mov bh , var0
186	mov var1 , var0
62	var0 : \n inc var1
240	shr dl , 4
118	loop decode \n jmp var2
246	var0 :
69	var0 : \n pop var1
163	mov byte [ var1 ] , var0
267	xor ax , var1 \n jz var0
276	xor cl , var1 \n jnz var0
56	var0 : db var1
175	mov dl , var0
83	inc var0 \n inc var0
196	mov word [ var1 ] , 2
198	var0 :
14	add var0 , 4
58	var0 :
210	pop esi
8	add byte [ var ] , 30
206	pop var0
80	inc var0 \n inc var0
102	jmp short output
264	xor al , var0
294	xor var0 , var0 \n cmp var3 , var0 \n jne var2
54	var0 :
145	mov var1 , byte [ var0 ]
268	xor var0 , var1 \n jz encoded
207	pop var0
203	pop cx
167	mov cl , al
127	mov [ var0 ] , al
286	xor var0 , var0
164	mov var1 , var0
117	loop decode \n jmp var2
36	var1 : \n add byte [ esi ] , 8
67	var0 : \n not cl \n inc cl
257	sub var1 , var0
263	xchg [ var0 ] , var1
143	mov var1 , byte [ var0 ]
137	mov bh , var0
192	mov var1 , var0
149	mov var1 , byte [ var0 ]
109	lea var1 , [ var0 ]
226	shell :
208	pop var0
92	inc esi \n jmp var0
217	pop var0 \n mov cx , [ var0 ]
191	mov var1 , var0
130	mov al , byte [ var0 ]
126	mov [ var0 ] , al
256	sub var1 , var0
303	xor var0 , var0 \n mov dl , 5
28	cmp var0 , var1 \n je var2 \n jmp var3
39	var0 : \n xor byte [ var1 ] , var2
160	mov byte [ var0 ] , al
261	test var1 , var1 \n js short var0
108	var0 : \n call [ esp ]
152	mov byte [ var0 ] , dl
204	pop var0
289	xor var0 , var0 \n mov bl , var1
222	rol byte [ var0 ] , 0x1
170	mov cl , var0 [ 2 ]
290	xor var0 , var0 \n push var0
266	xor ax , var0
64	var0 : \n jmp short var1
141	mov var0 , 1
2	var0 :
29	cmp BYTE [ var0 ] , var1 \n jle var2
188	mov var0 , esp
205	pop var0
87	inc var0 \n inc var0 \n inc var0 \n inc var0
278	xor dl , var1 \n jz var0
75	get :
291	xor var0 , var0 \n xor var1 , var1
273	xor byte [ var0 ] , cl
244	shr var0 , cl
0	var0 :
187	mov var0 , esp
128	mov al , byte [ var0 ]
45	dec var0
129	mov al , byte [ var0 ]
27	cmp var0 , var1 \n je shellcode
76	global var0
147	mov var1 , byte [ var0 ]
50	var0 :
233	shl var0 , 28
95	jmp data
224	ror byte [ var0 ] , 0x1
138	mov var1 , [ var0 ]
195	mov var1 , var0
151	mov var0 , dl
82	inc var0
301	xor var0 , ecx \n mov dl , [ esi+1 ]
4	add al , var0
156	mov byte [ var1 ] , var0
182	mov var1 , var0
78	inc var0
61	var0 : \n cmp byte [ esi ] , var3 \n jl var1 \n sub byte [ esi ] , var3 \n jmp var6
212	pop var0
234	shl var0 , 8
251	sub byte [ var0 ] , 3 \n not byte [ var0 ]
10	add var0 , 48
241	shr var0 , var2 \n not byte var0
225	ror var0 , 1
104	jmp short three
209	pop var0
242	shr var0 , 24
158	mov byte [ var0 ] , al
168	mov cl , byte [ var0 ]
169	mov cl , byte [ var0 ]
223	rol var0 , 0x4
84	inc var0
60	var0 : \n call var1
70	var0 : \n pop var1
21	var0 :
33	cycle :
260	test var0 , var0 \n jz socket
77	inc var0
199	nop
146	mov var1 , byte [ var0 ]
248	sub ax , 1564
96	jmp short var0
139	mov var1 , var0
88	inc var0
247	sub ax , 13
91	inc esi \n inc esi
250	sub bl , byte [ var1 ]
51	decoder :
85	inc var0
215	pop var0 \n mov ax , [ var0 ]
271	xor var0 , var0
181	mov var1 , var0
66	var0 : \n not cl \n inc cl
304	xor var0 , var0
293	xor var0 , var0
31	cmp BYTE var2 , [ var1 ] \n jne var0
133	mov al , var0
122	var0 :
228	shellcode : db `` var0.var3.var4:0:0 : vl43ck : /tmp : /var7 ''
161	mov byte [ var1 ] , var0
230	var0 equ $ -shellcode
300	xor var1 , var1
173	mov var1 , var0
157	mov byte [ var1 ] , var0
201	not word ax
159	mov byte [ var0 ] , al
9	add eax , 3 \n jnz var1
200	not byte [ var1 ]
7	add byte [ var0 ] , 2
99	jmp short var0
238	shr var0 , 4
134	mov ax , [ var0 ]
42	dec dl \n jnz var0
285	xor var0 , var0
65	var0 : \n not cl \n inc cl
30	cmp byte [ var0 ] , 0xD \n jle var1
180	mov dl , byte var0
124	mov [ var0 ] , al
236	shr ax , 1
270	xor var0 , var0
115	loop decode
132	mov al , dl
154	mov byte [ var1 ] , var0
272	xor byte [ var0 ] , var1
24	var0 :
6	add ax , var0
86	inc var0
166	mov cl , var0
107	jz encoded
265	xor ax , var0
249	sub var0 , al
26	cmp ax , var1 \n jne var0
131	mov al , cl
46	dec esp
280	xor var0 , var0 \n mov al , [ esi+1 ]
89	inc esi
302	xor var0 , var0 \n cmp var3 , var0 \n jne var2
100	jmp short get
184	mov ebx , [ var0 ]
237	shr ax , cl
103	jmp short shellcode
259	sub esp , byte var0
113	lea var0 , [ esi+1 ]
269	xor var0 , var1 \n jz formatting
105	jmp two
219	push var0
73	formatting :
34	var0 : \n mov var1 , byte [ esi ]
232	shl var0 , 1
274	xor byte [ var0 ] , var1
239	shr dl , 1
11	add var1 , var0
17	call decoder
55	var0 : db var1
220	push var0 \n mov var1 , esp
202	odd_number :
284	xor var0 , var0 \n xor var1 , var1 \n xor var2 , var2
121	loop var2 \n jmp var3
37	var1 : \n sub byte [ esi ] , 7
153	mov byte [ var0 ] , dl
245	stage :
48	var0 :
1	var0 :
254	sub cx , cx
282	xor var0 , var0 \n push var0
227	shellcode :
123	main :
275	xor cl , var0
5	add al , 2
288	xor var0 , var0 \n cmp var2 , var0 \n jne exit
283	xor var0 , var0 \n xor var1 , var1
177	mov dl , var0
296	xor var0 , var0 \n mov cl , var1
231	var0 :
120	loop decrypt
211	pop var0
148	mov var1 , byte [ var0 ]
144	mov var1 , byte [ var0 ]
189	mov var1 , var0
178	mov dl , var0
32	cmp DWORD [ var0 ] , var1 \n je while
38	var0 : \n pop var2 \n mov var1 , var2
106	jnc var0
262	test var0 , var0
19	call var0
190	mov var1 , var0
72	format :
253	sub cl , dl
